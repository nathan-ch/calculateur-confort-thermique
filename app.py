import streamlit as st
import matplotlib.pyplot as plt
import numpy as np
from pythermalcomfort.models import pmv_ppd_iso
from pythermalcomfort.utilities import operative_tmp, v_relative, clo_dynamic_iso

# Valeurs par d√©faut
DEFAULT_TDB = 19.0
DEFAULT_TR = 16.0
DEFAULT_V = 0.1
DEFAULT_RH = 40.0
DEFAULT_MET = 1.2  # Correspond √† "Activit√© l√©g√®re, assis (bureau, √©cole)"
DEFAULT_CLO = 0.7  # Correspond √† "Tenue de travail l√©g√®re"

# Calcul initial avec les valeurs par d√©faut
if 'pmv' not in st.session_state:
    vr = v_relative(DEFAULT_V, DEFAULT_MET)
    clo_dynamic_iso_val = clo_dynamic_iso(DEFAULT_CLO, DEFAULT_MET, DEFAULT_V)
    operative_tmp_val = operative_tmp(DEFAULT_TDB, DEFAULT_TR, vr)
    resultats_pmv = pmv_ppd_iso(tdb=DEFAULT_TDB, tr=DEFAULT_TR, vr=vr, rh=DEFAULT_RH, 
                               met=DEFAULT_MET, clo=clo_dynamic_iso_val, limit_inputs=False)
    
    st.session_state.pmv = resultats_pmv['pmv']
    st.session_state.ppd = resultats_pmv['ppd']
    st.session_state.operative_tmp = operative_tmp_val

# Titre de l'application
st.title("Calculateur de confort thermique")

# Introduction
st.markdown("""
### üéØ Objectif
Cet outil permet d'√©valuer le confort thermique d'un espace selon la norme ISO 7730, en calculant les indices PMV (Vote Moyen Pr√©visible) et PPD (Pourcentage Pr√©visible d'Insatisfaits).

### üìù Comment utiliser cet outil ?
1. **Param√®tres environnementaux** :
   - Renseignez la temp√©rature de l'air et la temp√©rature radiante moyenne
   - Indiquez la vitesse de l'air et l'humidit√© relative

2. **Param√®tres individuels** :
   - S√©lectionnez le type d'activit√© physique
   - Choisissez la tenue vestimentaire appropri√©e

Les r√©sultats se mettent √† jour automatiquement √† chaque modification des param√®tres.
""")

st.markdown("---")

# D√©finition des options d'habillement avec leurs valeurs clo
vetements = {
    "Nu": 0.0,
    "Short": 0.1,
    "Tenue tropicale type (short, chemise √† col ouvert et √† manches courtes, chaussettes l√©g√®res et sandales)": 0.3,
    "Tenue d'√©t√© l√©g√®re (pantalon l√©ger, chemise √† col ouvert et √† manches courtes, chaussettes l√©g√®res et chaussures)": 0.5,
    "Tenue de travail l√©g√®re (chemise de travail en coton √† manches longues, pantalon de travail, chaussettes de laine et chaussures)": 0.7,
    "Tenue d'int√©rieur pour l'hiver (chemise √† manches longues, pantalon, pull-over √† manches longues, chaussettes √©paisses et chaussures)": 1.0,
    "Tenue de ville traditionnelle (complet avec pantalon, gilet et veston, chemise, chaussettes de laine et grosses chaussures)": 1.5
}

# D√©finition des activit√©s avec leurs valeurs met
activites = {
    "Repos, couch√©": 0.8,
    "Repos, assis": 1.0,
    "Activit√© l√©g√®re, assis (bureau, √©cole)": 1.2,
    "Activit√© l√©g√®re, debout (laboratoire, industrie l√©g√®re)": 1.6,
    "Activit√© moyenne, debout (travail sur machine)": 2.0,
    "Activit√© soutenue (travail lourd sur machine)": 3.0
}

# Saisie des param√®tres utilisateur
col1, col2 = st.columns(2)
with col1:
    tdb = st.number_input("Temp√©rature de l'air (¬∞C)", value=DEFAULT_TDB, step=1.0)
    tr = st.number_input("Temp√©rature radiante moyenne (¬∞C)", value=DEFAULT_TR, step=1.0)
    v = st.number_input("Vitesse de l'air (m/s)", value=DEFAULT_V, step=0.1)
with col2:
    rh = st.number_input("Humidit√© relative (%)", value=DEFAULT_RH)
    activite_selectionnee = st.selectbox("Type d'activit√©", 
                                       options=list(activites.keys()),
                                       index=list(activites.keys()).index("Activit√© l√©g√®re, assis (bureau, √©cole)"))
    met = activites[activite_selectionnee]
    tenue_selectionnee = st.selectbox("Type d'habillement", 
                                    options=list(vetements.keys()),
                                    index=list(vetements.keys()).index("Tenue de travail l√©g√®re (chemise de travail en coton √† manches longues, pantalon de travail, chaussettes de laine et chaussures)"))
    clo = vetements[tenue_selectionnee]

# Calcul automatique
vr = v_relative(v, met)
clo_dynamic_iso = clo_dynamic_iso(clo, met, v)

# Calcul operative temperature
st.session_state.operative_tmp = operative_tmp(tdb, tr, vr)

# Calcul PMV standard
resultats_pmv = pmv_ppd_iso(tdb=tdb, tr=tr, vr=vr, rh=rh, met=met, clo=clo_dynamic_iso, limit_inputs = False)
st.session_state.pmv = resultats_pmv['pmv']
st.session_state.ppd = resultats_pmv['ppd']

# Affichage des r√©sultats
st.markdown("---")
st.markdown("### üìä R√©sultats PMV (ISO 7730)")

col1, col2, col3 = st.columns(3)
with col1:
    st.metric(label="PMV", value=f"{st.session_state.pmv:.2f}")
with col2:
    st.metric(label="PPD", value=f"{st.session_state.ppd:.1f}%")
with col3:
    st.metric(label="Temp√©rature op√©rative", value=f"{st.session_state.operative_tmp:.2f}¬∞C")

st.markdown("#### Graphique PMV-PPD")

# Cr√©ation du graphique
fig, ax = plt.subplots(figsize=(10, 6))
pmv_range = np.linspace(-3, 3, 100)
ppd_range = 100 - 95 * np.exp(-0.03353 * pmv_range**4 - 0.2179 * pmv_range**2)

ax.plot(pmv_range, ppd_range, label='Courbe de r√©f√©rence ISO 7730', color='blue')
if st.session_state.pmv != 0 or st.session_state.ppd != 0:
    ax.scatter(st.session_state.pmv, st.session_state.ppd, color='red', s=100, label='R√©sultat actuel')
ax.set_title('Relation PMV-PPD selon la norme ISO 7730')
ax.set_xlabel('PMV')
ax.set_ylabel('PPD (%)')
ax.grid(True)
ax.legend()
st.pyplot(fig)

# Section explicative
st.markdown("### üìñ Comment interpr√©ter les r√©sultats ?")

st.markdown("""
#### PMV (Vote Moyen Pr√©visible)
Le PMV est un indice qui pr√©dit la valeur moyenne des votes d'un groupe important de personnes sur une √©chelle de sensation thermique √† 7 niveaux :
- **-3** : Tr√®s froid
- **-2** : Froid
- **-1** : L√©g√®rement froid
- **0** : Neutre (optimal)
- **+1** : L√©g√®rement chaud
- **+2** : Chaud
- **+3** : Tr√®s chaud

Une valeur PMV entre -0.5 et +0.5 est consid√©r√©e comme confortable.

#### PPD (Pourcentage Pr√©visible d'Insatisfaits)
Le PPD indique le pourcentage de personnes susceptibles d'√™tre insatisfaites dans un environnement thermique donn√© :
- Le PPD minimal th√©orique est de 5% (m√™me dans des conditions optimales)
- Un PPD inf√©rieur √† 10% est consid√©r√© comme acceptable
- Plus le PMV s'√©carte de 0, plus le PPD augmente

#### Temp√©rature op√©rative
La temp√©rature op√©rative est un indicateur qui combine :
- La temp√©rature de l'air
- La temp√©rature radiante moyenne (temp√©rature des surfaces environnantes)
- L'effet de la vitesse de l'air

C'est la temp√©rature ressentie par les occupants, plus repr√©sentative du confort thermique que la simple temp√©rature de l'air. Elle permet de prendre en compte l'effet du rayonnement des parois et des mouvements d'air sur le confort thermique.

#### Lecture du graphique
- La **courbe bleue** montre la relation th√©orique entre PMV et PPD selon la norme ISO 7730
- Le **point rouge** repr√©sente votre situation actuelle
- La zone de confort optimal se situe entre -0.5 et +0.5 sur l'axe PMV, correspondant √† un PPD inf√©rieur √† 10%
""")

# Footer
st.markdown("---")
st.markdown("""
<div style='text-align: center; color: grey; padding: 20px;'>
D√©velopp√© avec ‚ù§Ô∏è en utilisant :<br>
<a href='https://pypi.org/project/pythermalcomfort/' target='_blank'>PythermalComfort</a> | 
<a href='https://streamlit.io' target='_blank'>Streamlit</a> | 
<a href='https://matplotlib.org/' target='_blank'>Matplotlib</a><br>
Nathan Chateau<br>
</div>
""", unsafe_allow_html=True)
